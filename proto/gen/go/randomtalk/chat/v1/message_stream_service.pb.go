// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: randomtalk/chat/v1/message_stream_service.proto

package chatpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReceiveMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *ReceiveMessagesRequest) Reset() {
	*x = ReceiveMessagesRequest{}
	mi := &file_randomtalk_chat_v1_message_stream_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessagesRequest) ProtoMessage() {}

func (x *ReceiveMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_randomtalk_chat_v1_message_stream_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessagesRequest.ProtoReflect.Descriptor instead.
func (*ReceiveMessagesRequest) Descriptor() ([]byte, []int) {
	return file_randomtalk_chat_v1_message_stream_service_proto_rawDescGZIP(), []int{0}
}

func (x *ReceiveMessagesRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type ReceiveMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *UserMessage `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ReceiveMessagesResponse) Reset() {
	*x = ReceiveMessagesResponse{}
	mi := &file_randomtalk_chat_v1_message_stream_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessagesResponse) ProtoMessage() {}

func (x *ReceiveMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_randomtalk_chat_v1_message_stream_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessagesResponse.ProtoReflect.Descriptor instead.
func (*ReceiveMessagesResponse) Descriptor() ([]byte, []int) {
	return file_randomtalk_chat_v1_message_stream_service_proto_rawDescGZIP(), []int{1}
}

func (x *ReceiveMessagesResponse) GetMessage() *UserMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId  string       `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Message *UserMessage `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_randomtalk_chat_v1_message_stream_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_randomtalk_chat_v1_message_stream_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_randomtalk_chat_v1_message_stream_service_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SendMessageRequest) GetMessage() *UserMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type SendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_randomtalk_chat_v1_message_stream_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_randomtalk_chat_v1_message_stream_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_randomtalk_chat_v1_message_stream_service_proto_rawDescGZIP(), []int{3}
}

var File_randomtalk_chat_v1_message_stream_service_proto protoreflect.FileDescriptor

var file_randomtalk_chat_v1_message_stream_service_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x63, 0x68, 0x61,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x74, 0x61, 0x6c, 0x6b, 0x2f,
	0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x16, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x54, 0x0a,
	0x17, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x74, 0x61, 0x6c, 0x6b,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x15, 0x0a,
	0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb5, 0x02, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x92, 0x01,
	0x0a, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x2a, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x2f, 0x7b, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x30, 0x01, 0x12, 0x87, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x26, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x74, 0x61, 0x6c, 0x6b, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x74, 0x61, 0x6c, 0x6b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x1a, 0x1c,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x2f, 0x7b, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x2c, 0x5a, 0x2a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x66, 0x72, 0x72, 0x2f,
	0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x74, 0x61, 0x6c, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_randomtalk_chat_v1_message_stream_service_proto_rawDescOnce sync.Once
	file_randomtalk_chat_v1_message_stream_service_proto_rawDescData = file_randomtalk_chat_v1_message_stream_service_proto_rawDesc
)

func file_randomtalk_chat_v1_message_stream_service_proto_rawDescGZIP() []byte {
	file_randomtalk_chat_v1_message_stream_service_proto_rawDescOnce.Do(func() {
		file_randomtalk_chat_v1_message_stream_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_randomtalk_chat_v1_message_stream_service_proto_rawDescData)
	})
	return file_randomtalk_chat_v1_message_stream_service_proto_rawDescData
}

var file_randomtalk_chat_v1_message_stream_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_randomtalk_chat_v1_message_stream_service_proto_goTypes = []any{
	(*ReceiveMessagesRequest)(nil),  // 0: randomtalk.chat.v1.ReceiveMessagesRequest
	(*ReceiveMessagesResponse)(nil), // 1: randomtalk.chat.v1.ReceiveMessagesResponse
	(*SendMessageRequest)(nil),      // 2: randomtalk.chat.v1.SendMessageRequest
	(*SendMessageResponse)(nil),     // 3: randomtalk.chat.v1.SendMessageResponse
	(*UserMessage)(nil),             // 4: randomtalk.chat.v1.UserMessage
}
var file_randomtalk_chat_v1_message_stream_service_proto_depIdxs = []int32{
	4, // 0: randomtalk.chat.v1.ReceiveMessagesResponse.message:type_name -> randomtalk.chat.v1.UserMessage
	4, // 1: randomtalk.chat.v1.SendMessageRequest.message:type_name -> randomtalk.chat.v1.UserMessage
	0, // 2: randomtalk.chat.v1.MessageStreamService.ReceiveMessages:input_type -> randomtalk.chat.v1.ReceiveMessagesRequest
	2, // 3: randomtalk.chat.v1.MessageStreamService.SendMessage:input_type -> randomtalk.chat.v1.SendMessageRequest
	1, // 4: randomtalk.chat.v1.MessageStreamService.ReceiveMessages:output_type -> randomtalk.chat.v1.ReceiveMessagesResponse
	3, // 5: randomtalk.chat.v1.MessageStreamService.SendMessage:output_type -> randomtalk.chat.v1.SendMessageResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_randomtalk_chat_v1_message_stream_service_proto_init() }
func file_randomtalk_chat_v1_message_stream_service_proto_init() {
	if File_randomtalk_chat_v1_message_stream_service_proto != nil {
		return
	}
	file_randomtalk_chat_v1_user_message_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_randomtalk_chat_v1_message_stream_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_randomtalk_chat_v1_message_stream_service_proto_goTypes,
		DependencyIndexes: file_randomtalk_chat_v1_message_stream_service_proto_depIdxs,
		MessageInfos:      file_randomtalk_chat_v1_message_stream_service_proto_msgTypes,
	}.Build()
	File_randomtalk_chat_v1_message_stream_service_proto = out.File
	file_randomtalk_chat_v1_message_stream_service_proto_rawDesc = nil
	file_randomtalk_chat_v1_message_stream_service_proto_goTypes = nil
	file_randomtalk_chat_v1_message_stream_service_proto_depIdxs = nil
}
